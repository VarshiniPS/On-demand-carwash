{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-stripe/src/lib/interfaces/ngx-stripe.interface.ts","../../../projects/ngx-stripe/src/lib/services/window-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/document-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/api-loader.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-instance.class.ts","../../../projects/ngx-stripe/src/lib/services/stripe.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-elements.service.ts","../../../projects/ngx-stripe/src/lib/components/card.component.ts","../../../projects/ngx-stripe/src/lib/directives/card-group.directive.ts","../../../projects/ngx-stripe/src/lib/components/card-number.component.ts","../../../projects/ngx-stripe/src/lib/components/card-expiry.component.ts","../../../projects/ngx-stripe/src/lib/components/card-cvc.component.ts","../../../projects/ngx-stripe/src/lib/components/fpx-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/ideal-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/iban.component.ts","../../../projects/ngx-stripe/src/lib/components/au-bank-account.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-request-button.component.ts","../../../projects/ngx-stripe/src/lib/services/stripe-factory.service.ts","../../../projects/ngx-stripe/src/lib/ngx-stripe.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","STRIPE_PUBLISHABLE_KEY","InjectionToken","STRIPE_OPTIONS","NGX_STRIPE_VERSION","WindowRef","platformId","prototype","getNativeWindow","isPlatformBrowser","window","Injectable","Inject","args","PLATFORM_ID","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","status","BehaviorSubject","loaded","loading","asStream","load","asObservable","isReady","getValue","_this","isPlatformServer","hasOwnProperty","Object","assign","script","createElement","type","async","defer","src","onload","onerror","appendChild","StripeInstance","version","loader","key","options","stripe$","undefined","stripe","pipe","filter","Boolean","first","map","Stripe","subscribe","stripeInstance","registerAppInfo","getNgxStripeAppInfo","getInstance","elements","redirectToCheckout","switchMap","from","confirmAuBecsDebitPayment","clientSecret","data","confirmBancontactPayment","confirmCardPayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmIdealPayment","confirmP24Payment","confirmSepaDebitPayment","handleCardAction","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmAuBecsDebitSetup","confirmCardSetup","confirmSepaDebitSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","name","url","partner_id","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","keys","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","EventEmitter","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","_a","toPromise","_b","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","Component","selector","template","ViewChild","Input","Output","StripeCardGroupDirective","_elements","Directive","StripeCardNumberComponent","cardGroup","setupElement","Error","cardGroupSubscription","unsubscribe","getCardNumber","decorators","Optional","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","canMakePayment","paymentRequestButton","currency","total","displayItems","shippingOptions","show","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>(\n  'Stripe Options'\n);\n\nexport const NGX_STRIPE_VERSION = new InjectionToken<string>('NGX_STRIPE_VERSION');\n\nexport interface StripeAppInfo {\n  name: string;\n  url: string;\n  partner_id: string;\n  version: string;\n}\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport { StripeAppInfo } from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$\n    .asObservable()\n    .pipe(filter((stripe) => Boolean(stripe)));\n\n  constructor(\n    private version: string,\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        (stripe as any).registerAppInfo(this.getNgxStripeAppInfo(this.version));\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe$.getValue();\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe$.asObservable().pipe(\n      filter((stripe) => Boolean(stripe)),\n      map((stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmEpsPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmFpxPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGiropayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmP24Payment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.createPaymentMethod(paymentMethodData))\n      ),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    const stripe = this.getInstance();\n\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmPaymentIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardSetup(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmSetupIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleFpxPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  private getNgxStripeAppInfo(version: string): StripeAppInfo {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS,\n  NGX_STRIPE_VERSION\n} from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(\n    stripe,\n    options: StripeElementsOptions = {}\n  ): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(\n    stripe,\n    options: PaymentRequestOptions\n  ): PaymentRequest | undefined {\n    return stripe\n      ? stripe.paymentRequest(options)\n      : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(\n    options: StripeCardElementOptions,\n    containerClass: string\n  ): StripeCardElementOptions;\n  mergeOptions(\n    options: StripeCardNumberElementOptions,\n    containerClass: string\n  ): StripeCardNumberElementOptions;\n  mergeOptions(\n    options: StripeCardExpiryElementOptions,\n    containerClass: string\n  ): StripeCardExpiryElementOptions;\n  mergeOptions(\n    options: StripeFpxBankElementOptions,\n    containerClass: string\n  ): StripeFpxBankElementOptions;\n  mergeOptions(\n    options: StripeIbanElementOptions,\n    containerClass: string\n  ): StripeIbanElementOptions;\n  mergeOptions(\n    options: StripeIdealBankElementOptions,\n    containerClass: string\n  ): StripeIdealBankElementOptions;\n  mergeOptions(\n    options: StripeAuBankAccountElementOptions,\n    containerClass: string\n  ): StripeAuBankAccountElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeCardElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardNumberComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardExpiryComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardCvcComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(\n    options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }\n  ) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeAuBankAccountComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(\n    options: Partial<StripeAuBankAccountElementOptions> = {}\n  ) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Observable, from } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentRequestButtonComponent implements OnChanges {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<\n    StripePaymentRequestButtonElementClickEvent\n  >();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<\n    PaymentRequestPaymentMethodEvent\n  >();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<\n    PaymentRequestShippingAddressEvent\n  >();\n  @Output() shippingoptionchange = new EventEmitter<\n    PaymentRequestShippingOptionEvent\n  >();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      const elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.paymentRequest = this.stripeElementsService.paymentRequest(\n          stripe,\n          this.paymentOptions\n        );\n        this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n        this.paymentRequest.on('paymentmethod', (ev) =>\n          this.paymentMethod.emit(ev)\n        );\n        this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n        this.paymentRequest.on('cancel', () => this.cancel.emit());\n        this.paymentRequest.on('shippingaddresschange', (ev) =>\n          this.shippingaddresschange.emit(ev)\n        );\n        this.paymentRequest.on('shippingoptionchange', (ev) =>\n          this.shippingoptionchange.emit(ev)\n        );\n        this.element = this.elements.create('paymentRequestButton', {\n          paymentRequest: this.paymentRequest,\n          ...options\n        });\n\n        this.canMakePayment().subscribe((result) => {\n          if (result) {\n            this.element.on('click', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n\n            this.element.mount(this.stripeElementRef.nativeElement);\n\n            this.load.emit({\n              paymentRequestButton: this.element,\n              paymentRequest: this.paymentRequest\n            });\n          } else {\n            this.notavailable.emit();\n          }\n        });\n      }\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    const { currency, total, displayItems, shippingOptions } = options;\n\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport {\n  NGX_STRIPE_VERSION,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(NGX_STRIPE_VERSION) public version: string,\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(\n    key?: string,\n    options?: StripeConstructorOptions\n  ): StripeInstance {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(\n      this.version,\n      this.loader,\n      this.window,\n      key || this.baseKey,\n      options || this.baseOptions\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\n\nimport {\n  NGX_STRIPE_VERSION,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeFpxBankComponent,\n  StripeIdealBankComponent,\n  StripeIbanComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [StripeCardGroupDirective];\n\nconst currentVersion = '11.1.0';\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        },\n        {\n          provide: NGX_STRIPE_VERSION,\n          useValue: currentVersion\n        }\n      ]\n    };\n  }\n}\n"]}